{"version":3,"sources":["scripts/main.js"],"names":["timeoutID","body","document","querySelector","insertAdjacentHTML","block","firstPromise","Promise","resolve","reject","addEventListener","clearTimeout","setTimeout","secondPromise","e","preventDefault","thirdPromise","leftClicked","rightClicked","onSuccess","message","classList","add","onError","then"],"mappings":";AAAA,aAEA,IAAIA,EAEEC,EAAOC,SAASC,cAAc,QAEpCF,EAAKG,mBAAmB,YAAxB,4CAMA,IAAMC,EAAQJ,EAAKE,cAAc,OAE3BG,EAAe,IAAIC,QAAQ,SAACC,EAASC,GACzCR,EAAKS,iBAAiB,QAAS,WAC7BF,EAAQ,8BACRG,aAAaX,KAGfA,EAAYY,WAAW,WAErBH,EAAO,+BACN,OAGCI,EAAgB,IAAIN,QAAQ,SAACC,EAASC,GAC1CR,EAAKS,iBAAiB,QAAS,WAC7BF,EAAQ,iCAGVP,EAAKS,iBAAiB,cAAe,SAACI,GACpCA,EAAEC,iBACFP,EAAQ,mCAINQ,EAAe,IAAIT,QAAQ,SAACC,EAASC,GACrCQ,IAAAA,GAAc,EACdC,GAAe,EAEnBjB,EAAKS,iBAAiB,QAAS,YAC7BO,GAAc,IAEKC,GACjBV,EAAQ,gCAIZP,EAAKS,iBAAiB,cAAe,SAACI,GACpCA,EAAEC,iBACFG,GAAe,EAEXD,GAAeC,GACjBV,EAAQ,kCAKd,SAASW,EAAUC,GACjBf,EAAMD,mBAAmB,YAAoBgB,OAAAA,OAAAA,EAA7C,UACAf,EAAMgB,UAAUC,IAAI,WAGtB,SAASC,EAAQH,GACff,EAAMD,mBAAmB,YAAoBgB,OAAAA,OAAAA,EAA7C,UACAf,EAAMgB,UAAUC,IAAI,WAGtBhB,EAAakB,KAAKL,EAAWI,GAC7BV,EAAcW,KAAKL,EAAWI,GAC9BP,EAAaQ,KAAKL,EAAWI","file":"main.d42a8edc.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nlet timeoutID;\n\nconst body = document.querySelector('body');\n\nbody.insertAdjacentHTML('beforeend',\n  `<div data-qa=\"notification\">\n\n  </div>`\n);\n\nconst block = body.querySelector('div');\n\nconst firstPromise = new Promise((resolve, reject) => {\n  body.addEventListener('click', () => {\n    resolve('First promise was resolved');\n    clearTimeout(timeoutID);\n  });\n\n  timeoutID = setTimeout(() => {\n    // eslint-disable-next-line prefer-promise-reject-errors\n    reject('First promise was rejected');\n  }, 3000);\n});\n\nconst secondPromise = new Promise((resolve, reject) => {\n  body.addEventListener('click', () => {\n    resolve('Second promise was resolved');\n  });\n\n  body.addEventListener('contextmenu', (e) => {\n    e.preventDefault();\n    resolve('Second promise was resolved');\n  });\n});\n\nconst thirdPromise = new Promise((resolve, reject) => {\n  let leftClicked = false;\n  let rightClicked = false;\n\n  body.addEventListener('click', () => {\n    leftClicked = true;\n\n    if (leftClicked && rightClicked) {\n      resolve('Third promise was resolved');\n    }\n  });\n\n  body.addEventListener('contextmenu', (e) => {\n    e.preventDefault();\n    rightClicked = true;\n\n    if (leftClicked && rightClicked) {\n      resolve('Third promise was resolved');\n    }\n  });\n});\n\nfunction onSuccess(message) {\n  block.insertAdjacentHTML('beforeend', `<h3>${message}</h3>`);\n  block.classList.add('success');\n}\n\nfunction onError(message) {\n  block.insertAdjacentHTML('beforeend', `<h3>${message}</h3>`);\n  block.classList.add('warning');\n}\n\nfirstPromise.then(onSuccess, onError);\nsecondPromise.then(onSuccess, onError);\nthirdPromise.then(onSuccess, onError);\n"]}